// Package router provides functionality to create, configure, and run a Gin router for handling HTTP requests.
package router

import (
	"fmt"

	"github.com/gin-gonic/gin"

	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"

	_ "github.com/owenfeehan/geocoding-nominatim-cache/docs" // docs is generated by swag init
)

// CreateRunRouter creates, configures, and runs the Gin router
//
// The forwardGeocde is a gin.HandlerFunc that handles the /locations/:place endpoint (for forward geocoding).
//
// addr is the address on which the server will listen (e.g., "localhost:8080").
// proxyList is a comma-separated list of trusted proxy IPs or CIDRs, used for configuring the Gin router.
func CreateRunRouter(addr string, proxyList string, forwardGeocode gin.HandlerFunc) error {
	router, err := createRouter(proxyList)

	if err != nil {
		return fmt.Errorf("failed to create router: %w", err)
	}

	configureRouter(router, forwardGeocode)

	if err := router.Run(addr); err != nil {
		return fmt.Errorf("failed to start server: %w", err)
	}

	return nil
}

// configureRouter attaches all routes to the router using the app instance
func configureRouter(router *gin.Engine, forwardGeocode gin.HandlerFunc) {

	// Swagger endpoint
	router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	router.GET("/locations/:place", forwardGeocode)
}
